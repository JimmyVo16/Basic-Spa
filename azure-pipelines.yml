name: React App Pipeline

trigger:
  branches:
    include:
    - public-main
  paths:
    include:
    - SinglePageApp/ClientApp/*

pr: none

variables:
  sourceId: sourceCode_$(Build.BuildId)

pool:
  vmImage: 'ubuntu-18.04'

stages:
  - stage: Checkout
    displayName: 'Checkout out source'
    jobs:
    - job: 'Checkout'
      steps:
        - checkout: self

        - publish: $(Build.SourcesDirectory)
          displayName: 'Stash source'
          artifact: $(sourceId)

  - stage: QualityGates
    displayName: 'Quality Gates'
    jobs: 
    - job: Build
      displayName: 'Build'
      steps:
      - checkout: none

      - task: DownloadPipelineArtifact@2
        displayName: 'Unstash source'
        inputs:
          artifact: $(sourceId)
          path: $(Build.SourcesDirectory)

      - bash: |
          cd $(Build.SourcesDirectory)/SinglePageApp/ClientApp/devops
          ls
        displayName: 'debug Build.SourcesDirectory'
      - task: ArchiveFiles@2
        displayName: Prepare Artifacts
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/SinglePageApp/ClientApp/devops'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)/test.zip'
          replaceExistingArchive: true

      - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)/test.zip'
        displayName: Publish artifacts
        artifact: Test_$(Build.BuildId)

  - stage: Download
    displayName: 'Download'
    jobs: 
    - job: working
      displayName: 'working'
      steps:
      - checkout: none

      - download: current
        artifact: Test_$(Build.BuildId)

      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: "$(Pipeline.Workspace)/**/*.zip"
          destinationFolder: $(Build.ArtifactStagingDirectory)
          cleanDestinationFolder: true

      - bash: |
          cd $(Build.ArtifactStagingDirectory)
          ls
        displayName: 'debug Build.ArtifactStagingDirectory'

